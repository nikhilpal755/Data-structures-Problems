https://leetcode.com/problems/majority-element-ii/

------------------- BOYER's MOORE MAJORITY VOTE ALGORITHM --------------------

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int n = nums.size();
        // at max we have 2 majority element (element occ is >  N/3 )
        
        // boyer moore majority vote algo
        int cnt1 = 0, cnt2 = 0, majority1 = 0 , majority2 =0;
        // first pass
        for(int i=0 ;i<n ;i++ ){
            if(nums[i] == majority1){
                cnt1++;
            }else if(nums[i] == majority2){
                cnt2++;
            }
            else if(cnt1 == 0){
                majority1 = nums[i];
                cnt1++;
            }
            else if(cnt2 == 0){
                majority2 = nums[i];
                cnt2++;
            }else{
                cnt1--;
                cnt2--;
            }
        }
        // second pass
        cnt1 = 0 , cnt2 = 0;
        for(int i=0 ;i<n ;i++){
            if(nums[i] == majority1)cnt1++;
            else if(nums[i] == majority2)cnt2++;
        }
        if(cnt1 > n/3 and cnt2 > n/3)return {majority1, majority2};
        else if(cnt1 > n/3)return {majority1};
        else if(cnt2 > n/3)return {majority2};
        
        return {};
        
        
        
    }
};
